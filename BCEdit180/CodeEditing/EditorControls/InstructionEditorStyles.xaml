<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:editors="clr-namespace:BCEdit180.CodeEditing.EditorControls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:vms="clr-namespace:BCEdit180.Core.CodeEditing.Bytecode.Instructions;assembly=BCEdit180.Core"
                    xmlns:controls="clr-namespace:BCEdit180.Controls"
                    xmlns:converters="clr-namespace:BCEdit180.Converters"
                    xmlns:bytecode="clr-namespace:BCEdit180.Core.CodeEditing.Bytecode;assembly=BCEdit180.Core"
                    xmlns:codeEditing="clr-namespace:BCEdit180.CodeEditing"
                    xmlns:codeEditing1="clr-namespace:BCEdit180.Core.CodeEditing;assembly=BCEdit180.Core"
                    xmlns:viewers="clr-namespace:BCEdit180.CodeEditing.Viewers"
                    xmlns:codeEdit="clr-namespace:BCEdit180.Core.Editors;assembly=BCEdit180.Core"
                    xmlns:attachedProperties="clr-namespace:BCEdit180.AttachedProperties"
                    xmlns:desc="clr-namespace:BCEdit180.Core.CodeEditing.Descriptors;assembly=BCEdit180.Core"
                    mc:Ignorable="d">
    <converters:TypeDescriptorToStringConverter x:Key="TypeDescriptorConverter"/>
    <!-- Visual studio might give some errors regarding d:DataContext, but i used
         rider to make this file as it's better for writing code. VS for the designer :)
         Some people even say the designer is pointless... i can't express how much i disagree    
    -->
    <Style TargetType="{x:Type editors:FieldInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:FieldInstructionViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Opcode" VerticalAlignment="Top" Padding="5"  FontWeight="Bold"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Field Name" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,26,0,0"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Field Owner" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,52,0,0"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Descriptor" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,78,0,0"/>
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding Opcode, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource FieldName}" Text="{Binding FieldName, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,26,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource ClassName}" Text="{Binding FieldOwner, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,52,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource FieldDescriptor}" Text="{Binding FieldDescriptor, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TypeDescriptorConverter}}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,78,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:IncrementInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:IncrementInstructionViewModel}">
                        <TextBlock Text="Opcode" Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold"/>
                        <TextBlock Text="Local Var Index" Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,26,0,0"/>
                        <TextBlock Text="By amount" Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,52,0,0"/>
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding Opcode, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource Keyword}" Text="{Binding VarIndex, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,26,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource ConstNumeric}" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,52,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:IntegerPushInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:IntegerPushInstructionViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Opcode" VerticalAlignment="Top" Padding="5"  FontWeight="Bold"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Integer Value" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,26,0,0"/>
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding Opcode, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource ConstNumeric}" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,26,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:InvokeDynamicInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:InvokeDynamicInstructionViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Text="Opcode"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,26,0,0" Text="Method Name"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,52,0,0" Text="Descriptor"/>
                        <TextBlock Width="145" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,78,0,0" Text="Bootstrap Method:"/>
                        <TextBlock Width="120" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="25,104,0,0"><Run Text="Reference Typ"/><Run Text="e"/></TextBlock>
                        <TextBlock Width="120" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="25,130,0,0" Text="Method Owner"/>
                        <TextBlock Width="120" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="25,156,0,0" Text="Method Name"/>
                        <TextBlock Width="120" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="25,182,0,0"><Run Text="Method Descr"/><Run Text="iptor"/></TextBlock>
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding Opcode, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource Keyword}" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,26,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource MethodDescriptor}" Text="{Binding Descriptor, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TypeDescriptorConverter}}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,52,75,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding BootstrapReferenceType, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="145,104,75,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource ClassName}" Text="{Binding BootstrapMethodOwner, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="145,130,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource Keyword}" Text="{Binding BootstrapMethodName, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="145,156,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource MethodDescriptor}" Text="{Binding BootstrapMethodDescriptor, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TypeDescriptorConverter}}" TextWrapping="NoWrap" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Top" Padding="5" Margin="145,182,75,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" MaxWidth="400"/>
                        <Button Command="{Binding EditDescriptorCommand}" Focusable="False" Margin="0,52,0,0" Content="Edit" Height="26" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75"/>
                        <Button Command="{Binding EditBootstrapReferenceTypeCommand}" Focusable="False" Margin="0,104,0,0" Content="Edit" Height="26" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75"/>
                        <Button Command="{Binding EditBootstrapDescriptorCommand}" Focusable="False" Margin="0,182,0,0" Content="Edit" Height="26" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75"/>
                        <TextBlock Width="152" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,208,0,0"><Run Text="Bootstrap "/><Run Text="Method Arg"/><Run Text="s:"/></TextBlock>
                        <ListBox ItemsSource="{Binding BootstrapMethodArgs}" 
                                 Background="Transparent"
                                 Margin="0,234,0,0"
                                 Padding="1 1 1 1"
                                 ScrollViewer.CanContentScroll="False"
                                 attachedProperties:Scrolling.ScrollHorizontallyWithShiftWheel="True"
                                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                 HorizontalContentAlignment="Stretch">
                            <ListBox.Resources>
                                <DataTemplate DataType="{x:Type codeEdit:MethodDescriptorViewModel}">
                                    <viewers:MethodDescriptorControl DataContext="{Binding}"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type desc:TypeDescViewModel}">
                                    <viewers:TypeDescriptorControl DataContext="{Binding}"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type codeEdit:HandleViewModel}">
                                    <viewers:HandleControl DataContext="{Binding}"/>
                                </DataTemplate>
                            </ListBox.Resources>
                        </ListBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:JumpInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:JumpInstructionViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Opcode" VerticalAlignment="Top" Padding="5"  FontWeight="Bold"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,26,0,0"><Run Text="Branch "/><Run Text="Target"/></TextBlock>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Byte Offset" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,52,0,0"/>
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding Opcode, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBlock Foreground="{StaticResource Keyword}" Text="{Binding TargetLabel.Index, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,26,150,0" FontWeight="Bold" FontStyle="Italic" />
                        <TextBlock Foreground="{StaticResource ConstNumeric}" Text="{Binding JumpOffset, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,52,0,0" FontWeight="Bold" FontStyle="Italic" />
                        <Button Command="{Binding EditTargetLabelCommand}" Content="Edit Target Label" ToolTip="Opens a window, which lets you select a new target label" HorizontalAlignment="Right" VerticalAlignment="Top" Padding="5" Margin="0,25,0,0" Width="150"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:LabelEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:LabelViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Index" VerticalAlignment="Top" Padding="5"  FontWeight="Bold"/>
                        <controls:DoubleClickEditBox Foreground="{StaticResource Keyword}" Text="{Binding Index, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:LdcInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:LdcInstructionViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Text="Opcode"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,26,0,0" Text="Value"/>
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding Opcode, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource ConstNumeric}" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsEditable, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,26,150,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <Button Command="{Binding EditValueCommand}" Focusable="False" Margin="650,26,0,0" Content="Edit Constant Value" Height="26" VerticalAlignment="Top"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:LineNumberEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:LineNumberViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Text="Line number"/>
                        <TextBox Foreground="{StaticResource Keyword}" Text="{Binding LineNumber, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:LookupSwitchInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:LookupSwitchInstructionViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Default Case" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Height="28"/>
                        <codeEditing:MatchLabelControl DataContext="{Binding DefaultLabel, UpdateSourceTrigger=PropertyChanged}" Margin="100,0,125,222"/>
                        <Button DataContext="{Binding DefaultLabel, UpdateSourceTrigger=PropertyChanged}" Command="{Binding EditTargetLabelCommand}" Content="Edit Target Label" ToolTip="Opens a window, which lets you select a new target label" HorizontalAlignment="Right" VerticalAlignment="Top" Padding="5" Width="125" Height="28"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Cases" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,28,0,0"/>
                        <ListBox ItemsSource="{Binding MatchLabels}" SelectedItem="{Binding SelectedLabel, UpdateSourceTrigger=PropertyChanged}" Margin="0,54,0,0" Background="{DynamicResource AREghZyBrush.Deep.3.Background.Static}" BorderBrush="{DynamicResource AREghZyBrush.Primary.4.Border.Static}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel d:DataContext="{d:DesignInstance bytecode:MatchLabelViewModel}" Orientation="Horizontal">
                                        <StackPanel.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Remove" Command="{Binding RemoveSelfCallback}"/>
                                            </ContextMenu>
                                        </StackPanel.ContextMenu>
                                        <TextBlock Text="Case " Foreground="{StaticResource Keyword}"/>
                                        <TextBox   Text="{Binding SwitchIndex, UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource Keyword}" Background="Transparent" BorderThickness="0" Padding="1 0 2 0"/>
                                        <TextBlock Text="→"/>
                                        <TextBlock FontFamily="Consolas" VerticalAlignment="Center" Padding="2 0">
                                            <Hyperlink Command="{Binding SelectJumpDestinationCommand}">
                                                <TextBlock Text="{Binding LabelIndex, UpdateSourceTrigger=PropertyChanged}" Foreground="{DynamicResource ConstNumeric}" ToolTip="The target branch label (which is where this case branches to). Click to scroll to the label" ToolTipService.ShowDuration="30000" Padding="2 0">
                                                    <TextBlock.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Command="{Binding EditTargetLabelCommand}" Header="Edit target label" ToolTip="Edit the label which this case will branch to"/>
                                                        </ContextMenu>
                                                    </TextBlock.ContextMenu>
                                                </TextBlock>
                                            </Hyperlink>
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:MethodInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:MethodInstructionViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Text="Opcode"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,26,0,0" Text="Method Name"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,52,0,0" Text="Method Owner"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Descriptor" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,78,0,0"/>
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding Opcode, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox  Foreground="{StaticResource Keyword}" Text="{Binding MethodName, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,26,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox  Foreground="{StaticResource ClassName}" Text="{Binding MethodOwner, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,52,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox  Foreground="{StaticResource MethodDescriptor}" Text="{Binding MethodDescriptor, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TypeDescriptorConverter}}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,78,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:MultiANewArrayInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:MultiANewArrayInstructionViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Text="Opcode"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,26,0,0" Text="Component"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,52,0,0" Text="Dimensions"/>
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding Opcode, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource ClassName}" Text="{Binding ComponentType, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,26,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource Keyword}" Text="{Binding Dimensions, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,52,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:NewArrayInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:NewArrayInstructionViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Text="Opcode"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,26,0,0" Text="Array Type"/>
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding Opcode, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <ComboBox Foreground="{StaticResource ConstEnum}" ItemsSource="{Binding TypeCodes, Mode=OneTime}" SelectedItem="{Binding SelectedCode, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Top" Padding="5" Margin="100,26,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" Height="26" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:SimpleInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:SimpleInstructionViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Text="Opcode"/>
                        <TextBlock Text="This is a simple instruction, and has no other editable values; you can only edit the opcode itself" TextWrapping="Wrap" Margin="5,26,5,5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:StackMapFrameEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:StackMapFrameViewModel}">
                        <TextBlock Text="Frame Type" Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold"/>
                        <TextBlock Text="Stack Size" Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,26,0,0"/>
                        <TextBlock Text="Locals Size" Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,52,0,0"/>
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding FrameType, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,75,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource Keyword}" Text="{Binding Stack, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,26,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource Keyword}" Text="{Binding Locals, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,52,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <Button Command="{Binding EditFrameTypeCommand}" Focusable="False" Content="Edit" Height="26" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:TableSwitchInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:TableSwitchInstructionViewModel}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Default Case" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Height="26" Margin="0,1,0,0"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="Low Value" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Height="26" Margin="0,28,0,0"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="High Value" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Height="26" Margin="0,54,0,0"/>
                        <codeEditing:MatchLabelControl DataContext="{Binding DefaultLabel, UpdateSourceTrigger=PropertyChanged}" Margin="100,0,120,0" Height="28" VerticalAlignment="Top"/>
                        <TextBox Foreground="{StaticResource ConstNumeric}" Text="{Binding LowValue, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,28,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource ConstNumeric}" Text="{Binding HighValue, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,54,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <Button DataContext="{Binding DefaultLabel, UpdateSourceTrigger=PropertyChanged}" Command="{Binding EditTargetLabelCommand}" Content="Edit Target Label" ToolTip="Opens a window, which lets you select a new target label" HorizontalAlignment="Right" VerticalAlignment="Top" Padding="5" Width="120" Height="29" Margin="0,-1,0,0"/>
                        <TextBlock HorizontalAlignment="Center" TextWrapping="NoWrap" Text="Cases" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Height="26" Grid.Column="1" Margin="0,1,0,0"/>
                        <ListBox ItemsSource="{Binding MatchLabels}" SelectedItem="{Binding SelectedLabel, UpdateSourceTrigger=PropertyChanged}" Background="{DynamicResource AREghZyBrush.Deep.3.Background.Static}" BorderBrush="{DynamicResource AREghZyBrush.Primary.4.Border.Static}" Grid.Column="1" Margin="0,28,0,0" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="False">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel d:DataContext="{d:DesignInstance bytecode:MatchLabelViewModel}" Orientation="Horizontal">
                                        <StackPanel.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Remove" Command="{Binding RemoveSelfCommand}"/>
                                            </ContextMenu>
                                        </StackPanel.ContextMenu>
                                        <TextBlock Text="Case " Foreground="{StaticResource Keyword}"/>
                                        <TextBox   Text="{Binding SwitchIndex, UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource Keyword}" Background="Transparent" BorderThickness="0" Padding="1 0 2 0"/>
                                        <TextBlock Text="→"/>
                                        <TextBlock FontFamily="Consolas" VerticalAlignment="Center" Padding="2 0">
                                            <Hyperlink Command="{Binding SelectJumpDestinationCommand}">
                                                <TextBlock Text="{Binding LabelIndex, UpdateSourceTrigger=PropertyChanged}" Foreground="{DynamicResource ConstNumeric}" ToolTip="The target branch label (which is where this case branches to). Click to scroll to the label" ToolTipService.ShowDuration="30000" Padding="2 0">
                                                    <TextBlock.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Command="{Binding EditTargetLabelCommand}" Header="Edit target label" ToolTip="Edit the label which this case will branch to"/>
                                                        </ContextMenu>
                                                    </TextBlock.ContextMenu>
                                                </TextBlock>
                                            </Hyperlink>
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:TypeInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:TypeInstructionViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Text="Opcode"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,26,0,0" Text="Type"/>
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding Opcode, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Text="{Binding Type, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,26,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type editors:VariableInstructionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance vms:VariableInstructionViewModel}">
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Text="Opcode"/>
                        <TextBlock Width="100" HorizontalAlignment="Left" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5"  FontWeight="Bold" Margin="0,26,0,0" Text="Variable Index"/>
                        <TextBox Foreground="{StaticResource ConstEnum}" Text="{Binding Opcode, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,0,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                        <TextBox Foreground="{StaticResource Keyword}" Text="{Binding VarIndex, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Stretch" TextWrapping="NoWrap" VerticalAlignment="Top" Padding="5" Margin="100,26,0,0" BorderThickness="0"  FontWeight="Bold" FontStyle="Italic" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>